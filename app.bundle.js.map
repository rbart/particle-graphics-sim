{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app/datastructure/Collection.ts","webpack:///./app/datastructure/QuadTreeBuilder.ts","webpack:///./app/datastructure/QuadTreeNode.ts","webpack:///./app/script.ts","webpack:///./app/state/Configurations.ts","webpack:///./app/state/LiteralParticleBuilder.ts","webpack:///./app/state/Particle.ts","webpack:///./app/state/ParticleBuilder.ts","webpack:///./app/state/ParticleCollection.ts","webpack:///./app/state/RadialParticleBuilder.ts","webpack:///./app/state/Rectangle.ts","webpack:///./app/state/Vector2d.ts","webpack:///./app/state/mutation/AdvancerCollection.ts","webpack:///./app/state/mutation/ApplyColorGravityVisitor.ts","webpack:///./app/state/mutation/ApplyGravityVisitor.ts","webpack:///./app/state/mutation/BasicAdvancer.ts","webpack:///./app/state/mutation/CyclingAdvancerCollection.ts","webpack:///./app/state/mutation/FixedGravityAdvancer.ts","webpack:///./app/state/mutation/OscillatingColorGravityVisitor.ts","webpack:///./app/state/mutation/ParticleAggregationVisitor.ts","webpack:///./app/state/mutation/QuadTreeGravityAdvancer.ts","webpack:///./app/state/mutation/WallBounceAdvancer.ts","webpack:///./app/visualization/FadeRenderer.ts","webpack:///./app/visualization/FixedCircleRenderer.ts","webpack:///./app/visualization/ParticleRenderer.ts","webpack:///./app/visualization/QuadTreeRenderer.ts","webpack:///./app/visualization/RendererCollection.ts"],"names":[],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/script.ts\");\n","export interface ICollection<TElement> {\n  elements: TElement[]\n}\n\nexport default class Collection<TElement> implements ICollection<TElement> {\n  public readonly elements: TElement[]\n\n  constructor() {\n    this.elements = []\n  }\n}\n","import HasPosition2d from '../state/HasPosition2d'\nimport { QuadTreeNode, QuadTreeLeafNode, QuadTreeInnerNode } from './QuadTreeNode'\nimport Collection from './Collection'\nimport QuadTreeCollectionFactory from './QuadTreeCollectionFactory'\nimport Rectangle from '../state/Rectangle'\n\nexport default class QuadTreeBuilder<\n    TElement extends HasPosition2d,\n    TCollection extends Collection<TElement>> {\n\n  constructor(\n    private collectionFactory: QuadTreeCollectionFactory<TCollection>,\n    private minNodeSize: number) { }\n\n  build(bounds: Rectangle): QuadTreeNode<TElement, TCollection> {\n    if (bounds.extents.length() >= this.minNodeSize) {\n      let halfExtent = bounds.extents.multiply(0.5)\n      let upperLeft = this.build(new Rectangle(bounds.origin, halfExtent))\n      let upperRight = this.build(new Rectangle(bounds.origin.addX(halfExtent.x), halfExtent))\n      let lowerLeft = this.build(new Rectangle(bounds.origin.addY(halfExtent.y), halfExtent))\n      let lowerRight = this.build(new Rectangle(bounds.origin.add(halfExtent), halfExtent))\n\n      return new QuadTreeInnerNode<TElement, TCollection>(\n        bounds,\n        this.collectionFactory.createInstance(bounds),\n        upperLeft,\n        upperRight,\n        lowerLeft,\n        lowerRight)\n\n    } else {\n      return new QuadTreeLeafNode<TElement, TCollection>(\n        bounds, this.collectionFactory.createInstance(bounds))\n    }\n  }\n}\n","import HasPosition2d from '../state/HasPosition2d'\nimport QuadTreeVisitor from './QuadTreeVisitor'\nimport Rectangle from '../state/Rectangle'\nimport Collection from './Collection'\n\nexport interface QuadTreeNode<\n    TElement extends HasPosition2d,\n    TCollection extends Collection<TElement>> {\n\n  bounds: Rectangle\n  collection: TCollection\n  isEmpty: boolean\n\n  accept(visitor: QuadTreeVisitor<TElement, TCollection>): void\n  add(element: TElement): void\n  clear(): void\n}\n\nexport class QuadTreeLeafNode<\n    TElement extends HasPosition2d,\n    TCollection extends Collection<TElement>>\n  implements QuadTreeNode<TElement, TCollection> {\n\n  public isEmpty: boolean\n  public elements: TElement[]\n\n  constructor(\n    public readonly bounds: Rectangle,\n    public readonly collection: TCollection) {\n\n    this.isEmpty = true\n    this.elements = collection.elements // keep direct pointer for perf\n  }\n\n  accept(visitor: QuadTreeVisitor<TElement, TCollection>) {\n    visitor.visitLeaf(this)\n  }\n\n  add(element: TElement) {\n    this.isEmpty = false\n    this.elements.push(element)\n  }\n\n  clear() {\n    this.isEmpty = true\n    this.elements.length = 0\n  }\n}\n\nexport class QuadTreeInnerNode<\n    TElement extends HasPosition2d,\n    TCollection extends Collection<TElement>>\n  extends QuadTreeLeafNode<TElement, TCollection> {\n\n  private allChildrenEmpty: boolean\n  public readonly children: QuadTreeNode<TElement, TCollection>[]\n\n  constructor(\n    public readonly bounds: Rectangle,\n    public readonly collection: TCollection,\n    public readonly upperLeft: QuadTreeNode<TElement, TCollection>,\n    public readonly upperRight: QuadTreeNode<TElement, TCollection>,\n    public readonly lowerLeft: QuadTreeNode<TElement, TCollection>,\n    public readonly lowerRight: QuadTreeNode<TElement, TCollection>) {\n\n    super(bounds, collection)\n    this.allChildrenEmpty = true\n    this.children = [upperLeft, upperRight, lowerLeft, lowerRight]\n  }\n\n  accept(visitor: QuadTreeVisitor<TElement, TCollection>) {\n    if (this.allChildrenEmpty) {\n      visitor.visitLeaf(this)\n    } else {\n      visitor.visit(this)\n    }\n  }\n\n  add(element: TElement) {\n    if (this.isEmpty) {\n      this.isEmpty = false\n      this.elements.push(element)\n    }\n    else if (this.allChildrenEmpty) {\n      this.allChildrenEmpty = false\n      for (let priorElement of this.elements) {\n        this.add(priorElement)\n      }\n      this.elements.length = 0\n      this.add(element)\n    }\n    else {\n      for (let child of this.children) {\n        if (child.bounds.contains(element)) {\n          child.add(element)\n          break\n        }\n      }\n    }\n  }\n\n  clear() {\n    if (!this.isEmpty) {\n      super.clear()\n    }\n    if (!this.allChildrenEmpty) {\n      for (let child of this.children) {\n        child.clear()\n      }\n      this.allChildrenEmpty = true\n    }\n  }\n}\n","import Particle from \"./state/Particle\";\nimport Advancer from \"./state/mutation/Advancer\"\nimport Renderer from \"./visualization/Renderer\"\nimport Vector2d from \"./state/Vector2d\";\nimport Rectangle from \"./state/Rectangle\";\nimport Configurations from './state/Configurations'\n\nvar c = <HTMLCanvasElement>document.getElementById(\"canvas\");\nc.width  = window.innerWidth;\nc.height = window.innerHeight;\n\nfunction fullscreen(){\n  var el = <any>document.getElementById('canvas');\n  if(el.webkitRequestFullScreen) {\n    el.webkitRequestFullScreen();\n  }\n  else {\n    el.mozRequestFullScreen();\n  }\n}\nc.addEventListener(\"click\",fullscreen)\n\nlet ctx: CanvasRenderingContext2D = <CanvasRenderingContext2D>c.getContext(\"2d\")\n\nlet bounds: Rectangle = new Rectangle(new Vector2d(0,0), new Vector2d(c.width, c.height))\n\nlet configuration = Configurations.OrbitalSim3\n\nlet particles: Particle[] = configuration.particleBuilder.generateParticles(bounds)\nlet renderer: Renderer = configuration.getRenderer(bounds, ctx);\nlet advancer: Advancer = configuration.getAdvancer(bounds);\n\nlet frameNumber = 0\nfunction framesPerSecondLogger() {\n  let lastFrameReportTime = Date.now()\n  return function() {\n    let now = Date.now()\n    let seconds = (now - lastFrameReportTime) / 1000\n    let fps = frameNumber / seconds\n    console.log(\"FPS: \" + fps.toFixed(1))\n    frameNumber = 0\n    lastFrameReportTime = now\n  }\n}\n\nsetInterval(framesPerSecondLogger(), 2000)\n\nrenderer.initialize()\n\nfunction drawFrame() {\n  frameNumber++\n  advancer.advance(particles);\n  requestAnimationFrame(drawFrame);\n  renderer.render(particles);\n}\n\nrequestAnimationFrame(drawFrame);\n","import Renderer, { RendererFactory } from \"../visualization/Renderer\";\nimport AdvancerFactory from \"./mutation/AdvancerFactory\";\nimport { FadeRendererFactory } from \"../visualization/FadeRenderer\";\nimport { QuadTreeGravityAdvancerFactory } from \"./mutation/QuadTreeGravityAdvancer\";\nimport { WallBounceAdvancerFactory } from \"./mutation/WallBounceAdvancer\";\nimport { OscillatingColorGravityVisitorFactory } from \"./mutation/OscillatingColorGravityVisitor\";\nimport { BasicAdvancerFactory } from \"./mutation/BasicAdvancer\";\nimport Vector2d from \"./Vector2d\";\nimport { FixedGravityAdvancerFactory } from \"./mutation/FixedGravityAdvancer\";\nimport { ParticleRendererFactory } from \"../visualization/ParticleRenderer\";\nimport Rectangle from \"./Rectangle\";\nimport Advancer from \"./mutation/Advancer\";\nimport AdvancerCollection from \"./mutation/AdvancerCollection\";\nimport RendererCollection from \"../visualization/RendererCollection\";\nimport ParticleBuilder, { BasicParticleBuilder } from \"./ParticleBuilder\";\nimport { ApplyColorGravityVisitorFactory } from \"./mutation/ApplyColorGravityVisitor\";\nimport { QuadTreeRendererFactory } from \"../visualization/QuadTreeRenderer\";\nimport { ApplyGravityVisitorFactory } from \"./mutation/ApplyGravityVisitor\";\nimport { RadialParticleBuilder } from \"./RadialParticleBuilder\";\nimport { GravityAdvancerFactory } from \"./mutation/GravityAdvancer\";\nimport { CyclingAdvancerCollectionFactory } from \"./mutation/CyclingAdvancerCollection\";\nimport { CombinedParticuleBuilder, LiteralParticleBuilder } from \"./LiteralParticleBuilder\";\nimport Particle from \"./Particle\";\nimport { FixedCircleRendererFactory } from \"../visualization/FixedCircleRenderer\";\n\nlet GRAVITY_COEF = 2.0\n\nexport class Configuration {\n  constructor(\n    public readonly particleBuilder: ParticleBuilder,\n    private readonly advancers: AdvancerFactory[],\n    private readonly renderers: RendererFactory[]) { }\n\n  getAdvancer(bounds: Rectangle): Advancer {\n    return new AdvancerCollection(this.advancers.map(adv => adv.createInstance(bounds)))\n  }\n\n  getRenderer(bounds: Rectangle, ctx: CanvasRenderingContext2D): Renderer {\n    return new RendererCollection(this.renderers.map(rend => rend.createInstance(bounds, ctx)))\n  }\n}\n\nlet colorAttract = [\n  new WallBounceAdvancerFactory(0.9),\n  new QuadTreeGravityAdvancerFactory(new ApplyColorGravityVisitorFactory(2*GRAVITY_COEF)),\n  new BasicAdvancerFactory(0.985)\n]\nlet colorRepel = [\n  new WallBounceAdvancerFactory(0.9),\n  new QuadTreeGravityAdvancerFactory(new ApplyColorGravityVisitorFactory(-2*GRAVITY_COEF)),\n  new BasicAdvancerFactory(0.98)\n]\nlet stdAttract = [\n  new WallBounceAdvancerFactory(0.9),\n  new QuadTreeGravityAdvancerFactory(new ApplyGravityVisitorFactory(2*GRAVITY_COEF)),\n  new BasicAdvancerFactory(0.98)\n]\nlet stdRepel = [\n  new WallBounceAdvancerFactory(0.9),\n  new QuadTreeGravityAdvancerFactory(new ApplyGravityVisitorFactory(-2*GRAVITY_COEF)),\n  new BasicAdvancerFactory(0.98)\n]\n\nexport default class Configurations {\n\n  // Good config\n  public static OrbitalSim = new Configuration(\n    new CombinedParticuleBuilder([\n      new RadialParticleBuilder(3000, 100, 400, GRAVITY_COEF, 500, 0.5, 1.2),\n    ]),\n    [\n      new BasicAdvancerFactory(1),\n      new FixedGravityAdvancerFactory(new Vector2d(0.5, 0.5), 500, GRAVITY_COEF, 20),\n      new QuadTreeGravityAdvancerFactory(new ApplyGravityVisitorFactory(GRAVITY_COEF)),\n      new WallBounceAdvancerFactory(.7)\n    ],\n    [\n      new FadeRendererFactory(1),\n      new ParticleRendererFactory(),\n      new FixedCircleRendererFactory(new Vector2d(0.5, 0.5), 20)\n    ]\n  )\n\n  // fast, exhibits early standing wave effect\n  public static OrbitalSim3 = new Configuration(\n    new CombinedParticuleBuilder([\n      new RadialParticleBuilder(3000, 350, 350, GRAVITY_COEF, 500, 0.05, 1.2),\n    ]),\n    [\n      new BasicAdvancerFactory(1),\n      new FixedGravityAdvancerFactory(new Vector2d(0.5, 0.5), 500, GRAVITY_COEF, 20),\n      new QuadTreeGravityAdvancerFactory(new ApplyColorGravityVisitorFactory(GRAVITY_COEF)),\n      new WallBounceAdvancerFactory(.7)\n    ],\n    [\n      new FadeRendererFactory(1),\n      new ParticleRendererFactory(),\n      new FixedCircleRendererFactory(new Vector2d(0.5, 0.5), 20)\n    ]\n  )\n\n  // Slow - takes about 30 seconds to swap.\n  public static SwappingMoons = new Configuration(\n    new CombinedParticuleBuilder([\n      new RadialParticleBuilder(1, 200, 200, GRAVITY_COEF, 1000, 1, 3, 3.14, 3.14),\n      new RadialParticleBuilder(1, 210, 210, GRAVITY_COEF, 1000, 1, 3, 0, 0),\n    ]),\n    [\n      new BasicAdvancerFactory(1),\n      new FixedGravityAdvancerFactory(new Vector2d(0.5, 0.5), 1000, GRAVITY_COEF, 20),\n      new QuadTreeGravityAdvancerFactory(new ApplyGravityVisitorFactory(GRAVITY_COEF)),\n      new WallBounceAdvancerFactory(.7)\n    ],\n    [\n      new FadeRendererFactory(0.03),\n      new ParticleRendererFactory(),\n      new FixedCircleRendererFactory(new Vector2d(0.5, 0.5), 20)\n    ]\n  )\n\n  public static OrbitalSim5 = new Configuration(\n    new CombinedParticuleBuilder([\n      new RadialParticleBuilder(1, 300, 300, GRAVITY_COEF, 1000, 4, 10, 0, 0),\n      new RadialParticleBuilder(4000, 350, 350, GRAVITY_COEF, 1000, 0, 1)//, Math.PI*0.7, Math.PI*1.4),\n    ]),\n    [\n      new BasicAdvancerFactory(1),\n      new FixedGravityAdvancerFactory(new Vector2d(0.5, 0.5), 1000, GRAVITY_COEF, 20),\n      new QuadTreeGravityAdvancerFactory(new ApplyGravityVisitorFactory(GRAVITY_COEF)),\n      //new WallBounceAdvancerFactory(.7)\n    ],\n    [\n      new FadeRendererFactory(0.3),\n      new ParticleRendererFactory(),\n      new FixedCircleRendererFactory(new Vector2d(0.5, 0.5), 20)\n    ]\n  )\n\n  public static CyclingConfig = new Configuration(\n    new BasicParticleBuilder(3000, 1, 1, 1),\n    [\n      new CyclingAdvancerCollectionFactory(6,\n        [\n          stdAttract, stdAttract,\n          colorAttract, colorAttract, colorAttract, colorAttract,\n          stdRepel,\n          colorRepel,\n        ])\n    ],\n    [\n      new FadeRendererFactory(0.7),\n      new QuadTreeRendererFactory(0.1),\n      new ParticleRendererFactory()\n    ]\n  )\n\n  public static RadialParticleGravityConfig = new Configuration(\n    new RadialParticleBuilder(2000, 120, 300, GRAVITY_COEF, 400),\n    [\n      new BasicAdvancerFactory(1.0),\n      new FixedGravityAdvancerFactory(new Vector2d(0.5, 0.5), 400, GRAVITY_COEF, 20),\n      new WallBounceAdvancerFactory(1)\n    ],\n    [\n      new FadeRendererFactory(0.7),\n      new ParticleRendererFactory()\n    ]\n  )\n\n  public static SimpleGravityConfig = new Configuration(\n    new BasicParticleBuilder(2000, 1, 1.25, 1.25),\n    [\n      new WallBounceAdvancerFactory(0.9),\n      new QuadTreeGravityAdvancerFactory(new ApplyGravityVisitorFactory(GRAVITY_COEF)),\n      new BasicAdvancerFactory(0.99),\n    ],\n    [\n      new FadeRendererFactory(0.7),\n      new ParticleRendererFactory()\n    ]\n  )\n\n  public static ColorGravityConfig = new Configuration(\n    new BasicParticleBuilder(2000, 1, 1.25, 1.25),\n    [\n      new WallBounceAdvancerFactory(0.5),\n      new QuadTreeGravityAdvancerFactory(new ApplyColorGravityVisitorFactory(GRAVITY_COEF)),\n      new BasicAdvancerFactory(1.0)\n    ],\n    [\n      new FadeRendererFactory(0.7),\n      new ParticleRendererFactory()\n    ]\n  )\n\n  public static OscillatingColorGravityConfig = new Configuration(\n    new BasicParticleBuilder(2000, 1, 1.25, 1.25),\n    [\n      new WallBounceAdvancerFactory(1.0),\n      new QuadTreeGravityAdvancerFactory(new OscillatingColorGravityVisitorFactory(GRAVITY_COEF)),\n      new BasicAdvancerFactory(1.0)\n    ],\n    [\n      new FadeRendererFactory(0.7),\n      new ParticleRendererFactory()\n    ]\n  )\n  static colorAttract: AdvancerFactory[][];\n}\n","import Vector2d from './Vector2d'\nimport Particle from './Particle'\nimport Rectangle from './Rectangle';\nimport ParticleBuilder from './ParticleBuilder';\n\nexport class LiteralParticleBuilder implements ParticleBuilder {\n\n  constructor(\n    private readonly protoParticles: Particle[]\n  ) { }\n\n  generateParticles(bounds: Rectangle): Particle[] {\n    let particles: Particle[] = []\n    for (let proto of this.protoParticles) {\n      let pos = proto.pos.multiplyVector(bounds.extents).add(bounds.origin)\n      let spd = proto.spd.multiplyVector(bounds.extents).add(bounds.origin)\n      let particle = new Particle(pos, spd, proto.mass, proto.rad, proto.hue)\n      particles.push(particle)\n    }\n    return particles\n  }\n}\n\nexport class CombinedParticuleBuilder implements ParticleBuilder {\n  constructor(private readonly builders: ParticleBuilder[]) { }\n  generateParticles(bounds: Rectangle): Particle[] {\n    let particles: Particle[] = []\n    for (let builder of this.builders) {\n      particles = particles.concat(builder.generateParticles(bounds))\n    }\n    return particles\n  }\n}\n","import HasPosition2d from './HasPosition2d'\nimport Vector2d from './Vector2d'\n\nexport default class Particle implements HasPosition2d {\n\n  public lastPos: Vector2d\n  private hslColorString_memo: string | null = null\n  private colorSizeCacheKey_memo: string | null = null\n\n  constructor(\n      readonly pos: Vector2d,\n      readonly spd: Vector2d,\n      public mass: number,\n      public rad: number,\n      readonly hue: Vector2d) {\n\n    this.lastPos = new Vector2d(pos.x, pos.y)\n  }\n\n  hslColorString() {\n    if (this.hslColorString_memo == null) {\n      let colorAngle: number = Math.atan2(this.hue.y, this.hue.x) * (180 / Math.PI)\n      this.hslColorString_memo = `hsl(${colorAngle| 0},100%,50%)`\n    }\n    return this.hslColorString_memo\n  }\n\n  colorSizeCacheKey() {\n    if (this.colorSizeCacheKey_memo == null) {\n      let colorAngle: number = Math.atan2(this.hue.y, this.hue.x) * (180 / Math.PI)\n      this.colorSizeCacheKey_memo = `${(this.rad + 0.5) * 2 | 0}_${colorAngle / 5 | 0}`\n    }\n    return this.colorSizeCacheKey_memo\n  }\n\n  position(): Vector2d {\n    return this.pos\n  }\n}\n","import Vector2d from './Vector2d'\nimport Particle from './Particle'\nimport Rectangle from './Rectangle';\n\nexport default interface ParticleBuilder {\n  generateParticles(bounds: Rectangle): Particle[]\n}\n\nexport class BasicParticleBuilder implements ParticleBuilder {\n\n  constructor(\n    private readonly numParticles: number,\n    private readonly maxSpeed: number,\n    private readonly minMass: number,\n    private readonly maxMass: number,\n  ) { }\n\n  generateParticles(bounds: Rectangle): Particle[] {\n    let particles: Particle[] = []\n    for (let i = 0; i < this.numParticles; i++) {\n      particles.push(this.generateParticle(bounds))\n    }\n    return particles\n  }\n\n  private generateParticle(bounds: Rectangle): Particle {\n    let mass = Math.floor(Math.random() * (this.maxMass - this.minMass)) + this.minMass;\n    let radius = Math.max(Math.sqrt(mass), 1)\n    let randomPosition = bounds.origin.add(new Vector2d(\n      Math.floor(Math.random() * bounds.extents.x - radius) + radius,\n      Math.floor(Math.random() * bounds.extents.y - radius) + radius,\n    ));\n    let randomSpeed = new Vector2d(\n      Math.random() * this.maxSpeed * 2 - this.maxSpeed,\n      Math.random() * this.maxSpeed * 2 - this.maxSpeed,\n    );\n    return new Particle(\n      randomPosition, randomSpeed, mass, radius, this.getRndHue()\n    );\n  }\n\n  private getRndHue(): Vector2d {\n\n    let hueAngle = 360 * Math.random()\n\n    let hueX = Math.cos(hueAngle)\n    let hueY = Math.sin(hueAngle)\n\n    return new Vector2d(hueX, hueY);\n  }\n}\n","import QuadTreeCollectionFactory from '../datastructure/QuadTreeCollectionFactory'\nimport Collection from '../datastructure/Collection'\nimport Particle from './Particle'\nimport Vector2d from './Vector2d'\nimport Rectangle from './Rectangle';\n\nexport class ParticleCollectionFactory implements QuadTreeCollectionFactory<ParticleCollection> {\n\n  private static readonly defaultBufferWidthConstant: number = (1 / 7)\n\n  constructor(private readonly bufferWidthConstant: number =\n    ParticleCollectionFactory.defaultBufferWidthConstant) { }\n\n  createInstance(bounds: Rectangle): ParticleCollection {\n    return new ParticleCollection(bounds, this.bufferWidthConstant)\n  }\n}\n\nexport default class ParticleCollection extends Collection<Particle> {\n\n  public readonly aggregate: Particle\n  // paddedBounds: aggregate can safely be applied outside of this boundary\n  public readonly paddedBounds: Rectangle\n\n  constructor(bounds: Rectangle, bufferWidthConstant: number) {\n    super();\n    this.aggregate = new Particle(new Vector2d(0,0), new Vector2d(0,0), 0, 0, new Vector2d(0,0))\n    let bufferWidth = bounds.extents.length() * bufferWidthConstant\n    let paddedOrigin = new Vector2d(bounds.origin.x - bufferWidth, bounds.origin.y - bufferWidth)\n    let paddedExtents = new Vector2d(bounds.extents.x + 2*bufferWidth, bounds.extents.y + 2*bufferWidth)\n    this.paddedBounds = new Rectangle(paddedOrigin, paddedExtents)\n  }\n}\n","import Vector2d from './Vector2d'\nimport Particle from './Particle'\nimport Rectangle from './Rectangle';\nimport ParticleBuilder from './ParticleBuilder';\n\nexport class RadialParticleBuilder implements ParticleBuilder {\n\n  constructor(\n    private readonly numParticles: number,\n    private readonly minRadius: number,\n    private readonly maxRadius: number,\n    private readonly g: number,\n    private readonly mass: number,\n    private readonly particleMass: number = 0,\n    private readonly particleRadius: number = 1,\n    private readonly startRad: number = 0,\n    private readonly endRad: number = Math.PI * 2\n  ) { }\n\n  generateParticles(bounds: Rectangle): Particle[] {\n    let particles: Particle[] = []\n    for (let i = 0; i < this.numParticles; i++) {\n      particles.push(this.generateParticle(bounds))\n    }\n    return particles\n  }\n\n  private generateParticle(bounds: Rectangle): Particle {\n    let mass = this.particleMass\n    let radius = this.particleRadius\n    let randomAngle = this.startRad + (Math.random() * (this.endRad - this.startRad))\n    let randomVector = new Vector2d(Math.cos(randomAngle), Math.sin(randomAngle))\n    let randomRadius = (Math.random() * (this.maxRadius - this.minRadius)) + this.minRadius\n    let boundsCenter = bounds.origin.add(bounds.extents.multiply(0.5))\n    let randomPosition = randomVector\n      .multiply(randomRadius)\n      .add(boundsCenter)\n\n    // let denom = randomRadius\n    // let speed = 10*Math.sqrt((this.g * this.mass) / denom)// https://en.wikipedia.org/wiki/Circular_orbit#Velocity\n    //let speedAngle = randomAngle + (Math.PI/2)\n    //let speedUnitVector = new Vector2d(Math.cos(speedAngle), Math.sin(speedAngle))\n    let speed = Math.sqrt((this.g * this.mass) / randomRadius)\n    let speedVector = new Vector2d(-randomVector.y, randomVector.x).multiply(speed)\n\n    return new Particle(\n      randomPosition, speedVector, mass, radius, this.getRndHue(randomAngle)\n    )\n  }\n\n  private getRndHue(angle: number): Vector2d {\n\n    //let hueAngle = 1//Math.PI * 2 * Math.random()\n\n    let hueX = Math.cos(angle)\n    let hueY = Math.sin(angle)\n\n    return new Vector2d(hueX, hueY);\n  }\n}\n","import Vector2d from \"./Vector2d\";\nimport HasPosition2d from \"./HasPosition2d\";\n\nexport default class Rectangle {\n\n  constructor(\n    public origin: Vector2d,\n    public extents: Vector2d) { }\n\n  contains(element: HasPosition2d): boolean {\n    let position = element.position()\n    return position.x >= this.origin.x &&\n      position.x < this.origin.x + this.extents.x &&\n      position.y >= this.origin.y &&\n      position.y < this.origin.y + this.extents.y;\n  }\n\n  toString(): string {\n    return `Rectangle: {origin: ${this.origin}, extents: ${this.extents}}`\n  }\n}\n","import HasPosition2d from \"./HasPosition2d\";\n\nexport default class Vector2d implements HasPosition2d {\n\n  constructor(\n    public x: number,\n    public y: number) { }\n\n    position(): Vector2d {\n      return this\n    }\n\n    equals(other: Vector2d): boolean {\n      return this.x == other.x && this.y == other.y;\n    }\n\n    addX(x: number): Vector2d {\n      return new Vector2d(this.x+x, this.y);\n    }\n\n    addY(y: number): Vector2d {\n      return new Vector2d(this.x, this.y+y);\n    }\n\n    add(other: Vector2d): Vector2d {\n      return new Vector2d(this.x+other.x, this.y+other.y);\n    }\n\n    addMutate(other: Vector2d): void {\n      this.x += other.x;\n      this.y += other.y;\n    }\n\n    subtract(other: Vector2d): Vector2d {\n      return new Vector2d(this.x-other.x, this.y-other.y);\n    }\n\n    subtractMutate(other: Vector2d): void {\n      this.x -= other.x;\n      this.y -= other.y;\n    }\n\n    multiply(scalar: number): Vector2d {\n      return new Vector2d(this.x * scalar, this.y * scalar);\n    }\n\n    multiplyVector(other: Vector2d): Vector2d {\n      return new Vector2d(this.x * other.x, this.y * other.y);\n    }\n\n    multiplyMutate(scalar: number) {\n      this.x *= scalar\n      this.y *= scalar\n    }\n\n    divideMutate(scalar: number) {\n      this.x /= scalar\n      this.y /= scalar\n    }\n\n    lengthSquared(): number {\n      return this.x * this.x + this.y * this.y\n    }\n\n    length(): number {\n      return Math.sqrt(this.lengthSquared())\n    }\n\n    toString(): string {\n      return `Vector2d: {x: ${this.x}, y: ${this.y}}`\n    }\n\n    dotProduct(other: Vector2d): number {\n      return this.x * other.x + this.y * other.y\n    }\n\n    cosineSimilarity(other: Vector2d): number {\n      return this.dotProduct(other) / (this.length() * other.length())\n    }\n\n    setEqualTo(other: Vector2d) {\n      this.x = other.x\n      this.y = other.y\n    }\n}\n","import Advancer from \"./Advancer\"\nimport Particle from '../Particle'\n\nexport default class AdvancerCollection implements Advancer {\n\n  constructor(private advancers: Advancer[]) {}\n\n  advance(particles: Particle[]): void {\n    this.advancers.forEach(advancer => advancer.advance(particles))\n  }\n}\n","import Particle from \"../Particle\"\nimport ApplyGravityVisitor from \"./ApplyGravityVisitor\"\nimport GravityVisitorFactory from \"./GravityVisitorFactory\";\n\nexport default class ApplyColorGravityVisitor extends ApplyGravityVisitor {\n\n  constructor(\n    protected readonly particle: Particle,\n    protected readonly gravityCoef: number) {\n\n    super(particle, gravityCoef)\n  }\n\n  protected applyGravityFrom(other: Particle): void {\n    let gravityVector = this.particle.pos.subtract(other.pos)\n    let length = gravityVector.length()\n    let colorCosine = this.particle.hue.cosineSimilarity(other.hue)\n    let radSum = this.particle.rad + other.rad\n    if (length < radSum) return\n    let gravityStrength =\n      (colorCosine * other.mass * this.gravityCoef) / (gravityVector.lengthSquared())\n    gravityStrength = Math.min(10, gravityStrength)\n    gravityVector.multiplyMutate(gravityStrength / length)\n    this.particle.spd.subtractMutate(gravityVector)\n  }\n}\n\nexport class ApplyColorGravityVisitorFactory implements GravityVisitorFactory<ApplyColorGravityVisitor> {\n  constructor(private readonly gravityCoef: number) {}\n  createInstance(particle: Particle): ApplyColorGravityVisitor {\n    return new ApplyColorGravityVisitor(particle, this.gravityCoef)\n  }\n}\n","import Particle from \"../Particle\"\nimport QuadTreeVisitor from \"../../datastructure/QuadTreeVisitor\"\nimport { QuadTreeInnerNode, QuadTreeLeafNode } from \"../../datastructure/QuadTreeNode\"\nimport ParticleCollection from \"../ParticleCollection\"\nimport GravityVisitorFactory from \"./GravityVisitorFactory\"\n\nexport default class ApplyGravityVisitor implements QuadTreeVisitor<Particle, ParticleCollection> {\n\n  constructor(protected readonly particle: Particle, protected readonly gravityCoef: number) { }\n\n  visit(node: QuadTreeInnerNode<Particle, ParticleCollection>): void {\n    if (node.isEmpty) return\n    let canApplyAggregate = !node.collection.paddedBounds.contains(this.particle)\n    if (!canApplyAggregate) {\n      for (let child of node.children) {\n        child.accept(this)\n      }\n    } else {\n      this.apply([node.collection.aggregate])\n    }\n  }\n\n  visitLeaf(node: QuadTreeLeafNode<Particle, ParticleCollection>): void {\n    this.apply(node.elements)\n  }\n\n  protected apply(particles: Particle[]): void {\n    for (let other of particles) {\n      if (other == this.particle) continue\n      this.applyGravityFrom(other)\n    }\n  }\n\n  protected applyGravityFrom(other: Particle) {\n    let gravityVector = this.particle.pos.subtract(other.pos)\n    let length = gravityVector.length()\n    let radSum = this.particle.rad + other.rad\n\n    let gravityStrength =\n      (other.mass * this.gravityCoef) / (gravityVector.lengthSquared())\n\n    if (length < radSum) {\n      // pseudo https://en.wikipedia.org/wiki/Shell_theorem\n      let ratio = length / radSum\n      gravityStrength *= (ratio * ratio)\n    }\n\n    gravityStrength = Math.min(20, gravityStrength)\n    gravityVector.multiplyMutate(gravityStrength / length)\n    this.particle.spd.subtractMutate(gravityVector)\n  }\n}\n\nexport class ApplyGravityVisitorFactory implements GravityVisitorFactory<ApplyGravityVisitor> {\n  constructor(private readonly gravityCoef: number) {}\n  createInstance(particle: Particle): ApplyGravityVisitor {\n    return new ApplyGravityVisitor(particle, this.gravityCoef)\n  }\n}\n","import Advancer from './Advancer'\nimport Particle from '../Particle'\nimport AdvancerFactory from './AdvancerFactory';\nimport Rectangle from '../Rectangle';\n\nexport class BasicAdvancerFactory implements AdvancerFactory {\n  constructor(private readonly dragCoef: number) { }\n  createInstance(_: Rectangle): BasicAdvancer {\n    return new BasicAdvancer(this.dragCoef)\n  }\n}\n\nexport default class BasicAdvancer implements Advancer {\n  constructor(private readonly dragCoef: number) { }\n  advance(particles: Particle[]): void {\n    for (let particle of particles ) {\n      particle.spd.multiplyMutate(this.dragCoef)\n      particle.pos.addMutate(particle.spd);\n    }\n  }\n}\n","import Particle from \"../Particle\"\nimport Advancer from \"./Advancer\";\nimport AdvancerFactory from \"./AdvancerFactory\";\nimport Rectangle from \"../Rectangle\";\n\nexport class CyclingAdvancerCollectionFactory implements AdvancerFactory {\n\n  constructor(private cycleSeconds: number, private advancerFactories: AdvancerFactory[][]) { }\n\n  createInstance(bounds: Rectangle): CyclingAdvancerCollection {\n    let advancers = this.advancerFactories.map(a => a.map(aa => aa.createInstance(bounds)))\n    return new CyclingAdvancerCollection(this.cycleSeconds, advancers)\n  }\n}\n\nexport default class CyclingAdvancerCollection {\n  private readonly startTime: number;\n\n  constructor(private cycleSeconds: number, private advancers: Advancer[][]) {\n    this.startTime = Date.now()\n  }\n\n  advance(particles: Particle[]): void {\n    let currentTime = Date.now()\n    let elapsedMs = currentTime - this.startTime\n    let elapsedSeconds = elapsedMs / 1000.0\n    let elapsedCycles = elapsedSeconds / this.cycleSeconds\n    let cycleNumber = (elapsedCycles | 0) % this.advancers.length\n    this.advancers[cycleNumber].forEach(adv => adv.advance(particles))\n  }\n}\n","import Advancer from './Advancer'\nimport Particle from '../Particle'\nimport Vector2d from '../Vector2d';\nimport AdvancerFactory from './AdvancerFactory';\nimport Rectangle from '../Rectangle';\n\nexport class FixedGravityAdvancerFactory implements AdvancerFactory {\n  constructor(readonly point: Vector2d, readonly mass: number, readonly gravityCoef: number, readonly radius: number) { }\n  createInstance(bounds: Rectangle): FixedGravityAdvancer {\n    return new FixedGravityAdvancer(bounds, this.point, this.mass, this.gravityCoef, this.radius)\n  }\n}\n\nexport default class FixedGravityAdvancer implements Advancer {\n  point: Vector2d\n  effectiveRadius: number;\n  constructor(\n      bounds: Rectangle,\n      point: Vector2d,\n      readonly mass: number,\n      readonly gravityCoef: number,\n      readonly radius: number) {\n\n    let scaledPoint = new Vector2d(\n      bounds.extents.x * point.x,\n      bounds.extents.y * point.y)\n    this.point = bounds.origin.add(scaledPoint)\n    this.effectiveRadius = Math.sqrt(Math.abs(mass))\n  }\n\n  advance(particles: Particle[]): void {\n    for (let i = 0; i < particles.length; i++) {\n      let p1 = particles[i]\n      let gravityVector = p1.pos.subtract(this.point)\n      let length = gravityVector.length()\n      if (length < this.radius) {\n        particles.splice(i,1)\n        i--\n        continue\n      }\n      let gravityStrength =\n        (this.mass * this.gravityCoef) / gravityVector.lengthSquared()\n      gravityStrength = Math.min(20, gravityStrength)\n      gravityVector.multiplyMutate(gravityStrength / length)\n      p1.spd.subtractMutate(gravityVector)\n    }\n  }\n}\n","import Particle from \"../Particle\"\nimport ApplyColorGravityVisitor from \"./ApplyColorGravityVisitor\"\nimport GravityVisitorFactory from './GravityVisitorFactory'\n\nexport default class OscillatingColorGravityVisitor extends ApplyColorGravityVisitor {\n\n  colorFactorCosine: number\n  gravityPushPullCosine: number\n\n  constructor(\n    protected readonly particle: Particle,\n    protected readonly gravityCoef: number) {\n    super(particle, gravityCoef)\n    // TODO make these constants configurable, get time externally somehow.\n    let frameNumber = Date.now() / 30\n    this.colorFactorCosine = Math.cos(frameNumber / 302)\n    this.gravityPushPullCosine = Math.cos(frameNumber / 517)\n    this.gravityPushPullCosine = -0.2 / (1.1 + this.gravityPushPullCosine) + 1\n  }\n\n  protected applyGravityFrom(other: Particle): void {\n    let gravityVector = this.particle.pos.subtract(other.pos)\n    let colorCosine = this.particle.hue.cosineSimilarity(other.hue)\n    colorCosine = (this.colorFactorCosine + (1 - this.colorFactorCosine)*colorCosine)\n    colorCosine *= this.gravityPushPullCosine\n    let radSum = this.particle.rad + other.rad\n    let gravityStrength =\n      (colorCosine * other.mass * this.gravityCoef) / (gravityVector.lengthSquared() + radSum)\n    gravityStrength = Math.min(10, gravityStrength)\n    gravityVector.multiplyMutate(gravityStrength / gravityVector.length())\n    this.particle.spd.subtractMutate(gravityVector)\n  }\n}\n\nexport class OscillatingColorGravityVisitorFactory implements GravityVisitorFactory<OscillatingColorGravityVisitor> {\n  constructor(private readonly gravityCoef: number) {}\n  createInstance(particle: Particle): OscillatingColorGravityVisitor {\n    return new OscillatingColorGravityVisitor(particle, this.gravityCoef)\n  }\n}\n","import { QuadTreeInnerNode, QuadTreeLeafNode, QuadTreeNode } from \"../../datastructure/QuadTreeNode\"\nimport Particle from \"../Particle\"\nimport QuadTreeVisitor from \"../../datastructure/QuadTreeVisitor\"\nimport ParticleCollection from \"../ParticleCollection\"\nimport Vector2d from \"../Vector2d\"\n\nexport default class ParticleAggregationVisitor implements QuadTreeVisitor<Particle, ParticleCollection> {\n\n  visit(node: QuadTreeInnerNode<Particle, ParticleCollection>): void {\n    if (node.isEmpty) {\n      return\n    }\n    let childAggregates: Particle[] = []\n    for (let child of node.children) {\n      if (!child.isEmpty) {\n        child.accept(this)\n        childAggregates.push(child.collection.aggregate)\n      }\n    }\n    this.aggregate(childAggregates, node)\n  }\n\n  visitLeaf(node: QuadTreeLeafNode<Particle, ParticleCollection>): void {\n    if (node.isEmpty) return\n    this.aggregate(node.elements, node)\n  }\n\n  private aggregate(particles: Particle[], node: QuadTreeNode<Particle, ParticleCollection>): void {\n    let aggregate = node.collection.aggregate\n    if (particles.length == 1) {\n      let particle = particles[0]\n      aggregate.pos.setEqualTo(particle.pos)\n      aggregate.hue.setEqualTo(particle.hue)\n      aggregate.mass = particle.mass\n      aggregate.rad = particle.rad\n    }\n    else {\n      let totalMass = 0\n      let totalRad = 0\n      let avgPos = new Vector2d(0,0)\n      let avgHue = new Vector2d(0,0)\n      for (let particle of particles) {\n        totalMass += particle.mass\n        avgPos.addMutate(particle.pos.multiply(particle.mass))\n        avgHue.addMutate(particle.hue.multiply(particle.mass))\n      }\n      avgPos.divideMutate(totalMass)\n      avgHue.divideMutate(avgHue.length())\n      aggregate.pos.setEqualTo(avgPos)\n      aggregate.hue.setEqualTo(avgHue)\n      aggregate.mass = totalMass\n      aggregate.rad = Math.sqrt(totalMass)\n    }\n  }\n}\n","import Advancer from './Advancer'\nimport Particle from '../Particle'\nimport { QuadTreeNode } from '../../datastructure/QuadTreeNode'\nimport QuadTreeBuilder from '../../datastructure/QuadTreeBuilder'\nimport ParticleAggregationVisitor from './ParticleAggregationVisitor'\nimport ParticleCollection, { ParticleCollectionFactory } from '../ParticleCollection'\nimport Rectangle from '../Rectangle'\nimport GravityVisitorFactory from './GravityVisitorFactory'\nimport QuadTreeVisitor from '../../datastructure/QuadTreeVisitor'\n\nexport default class QuadTreeGravityAdvancer\n  <TGravityVisitor extends QuadTreeVisitor<Particle, ParticleCollection>>\n  implements Advancer {\n\n  private quadTree: QuadTreeNode<Particle, ParticleCollection>\n  private particleAggregator: ParticleAggregationVisitor\n\n  constructor(\n      readonly bounds: Rectangle,\n      readonly gravityVisitorFactory: GravityVisitorFactory<TGravityVisitor>,\n      minNodeSizeFactor: number\n    ) {\n\n    let minNodeSize = bounds.extents.length() * minNodeSizeFactor\n\n    let quadTreeBuilder = new QuadTreeBuilder<Particle, ParticleCollection>(\n      new ParticleCollectionFactory(), minNodeSize)\n\n    this.quadTree = quadTreeBuilder.build(bounds)\n    this.particleAggregator = new ParticleAggregationVisitor()\n  }\n\n  advance(particles: Particle[]): void {\n    this.quadTree.clear()\n    for (let particle of particles) {\n      if (particle.mass == 0) continue \n      this.quadTree.add(particle)\n    }\n    this.quadTree.accept(this.particleAggregator)\n    for (let particle of particles) {\n      let gravityVisitor = this.gravityVisitorFactory.createInstance(particle)\n      this.quadTree.accept(gravityVisitor)\n    }\n  }\n}\n\nimport AdvancerFactory from './AdvancerFactory'\n\nexport class QuadTreeGravityAdvancerFactory\n  <TGravityVisitor extends QuadTreeVisitor<Particle, ParticleCollection>>\n  implements AdvancerFactory {\n\n  private static defaultMinNodeSizeFactor: number = (1 / 200)\n\n  constructor(\n    readonly gravityVisitorFactory: GravityVisitorFactory<TGravityVisitor>,\n    readonly minNodeSizeFactor: number = QuadTreeGravityAdvancerFactory.defaultMinNodeSizeFactor) { }\n\n  createInstance(bounds: Rectangle): QuadTreeGravityAdvancer<TGravityVisitor> {\n    return new QuadTreeGravityAdvancer(bounds, this.gravityVisitorFactory, this.minNodeSizeFactor)\n  }\n}\n","import Advancer from './Advancer'\nimport Particle from '../Particle'\nimport Rectangle from '../Rectangle'\nimport Vector2d from '../Vector2d'\nimport AdvancerFactory from './AdvancerFactory'\n\nexport class WallBounceAdvancerFactory implements AdvancerFactory {\n  constructor(readonly bounceCoef: number) { }\n  createInstance(bounds: Rectangle): WallBounceAdvancer {\n    return new WallBounceAdvancer(bounds, this.bounceCoef)\n  }\n}\n\nexport default class WallBounceAdvancer implements Advancer {\n\n  private origin: Vector2d\n  private outer: Vector2d\n\n  constructor(readonly bounds: Rectangle, readonly bounceCoef: number) {\n    this.origin = bounds.origin\n    this.outer = bounds.origin.add(bounds.extents)\n  }\n\n  advance(particles: Particle[]): void {\n    for (let particle of particles) {\n      if (this.belowMinX(particle) || this.aboveMaxX(particle)) {\n        this.invertSpdX(particle)\n      }\n\n      if (this.aboveMaxY(particle) || this.belowMinY(particle)) {\n        this.invertSpdY(particle)\n      }\n    }\n  }\n\n  private invertSpdX(particle: Particle): void {\n    particle.spd.x *= -this.bounceCoef\n  }\n\n  private invertSpdY(particle: Particle): void {\n    particle.spd.y *= -this.bounceCoef\n  }\n\n  private aboveMaxX(particle: Particle): boolean {\n    return (particle.pos.x > this.outer.x - particle.rad && particle.spd.x > 0)\n  }\n\n  private belowMinX(particle: Particle): boolean {\n    return (particle.pos.x < particle.rad + this.origin.x && particle.spd.x < 0);\n  }\n\n  private aboveMaxY(particle: Particle): boolean {\n    return (particle.pos.y > this.outer.y - particle.rad && particle.spd.y > 0)\n  }\n\n  private belowMinY(particle: Particle): boolean {\n    return (particle.pos.y < particle.rad + this.origin.y && particle.spd.y < 0)\n  }\n}\n","import Particle from '../state/Particle'\nimport Renderer, { RendererFactory } from './Renderer'\nimport Rectangle from '../state/Rectangle';\n\nexport class FadeRendererFactory implements RendererFactory {\n  constructor(readonly fadeRate: number) { }\n  createInstance(bounds: Rectangle, ctx: CanvasRenderingContext2D): Renderer {\n    return new FadeRenderer(ctx, bounds, this.fadeRate)\n  }\n}\n\nexport default class FadeRenderer implements Renderer {\n  constructor(\n    readonly ctx: CanvasRenderingContext2D,\n    readonly bounds: Rectangle,\n    readonly fadeRate: number) { }\n\n  initialize() {\n    this.ctx.globalAlpha = 1;\n    this.ctx.fillStyle = \"rgb(3,3,3)\";\n    this.ctx.fillRect(\n      this.bounds.origin.x,\n      this.bounds.origin.y,\n      this.bounds.extents.x,\n      this.bounds.extents.y);\n  }\n\n  render(_: Particle[]) {\n    let initialAlpha = this.ctx.globalAlpha;\n    this.ctx.globalAlpha = this.fadeRate\n    this.ctx.fillStyle = \"black\"\n    this.ctx.fillRect(\n      this.bounds.origin.x,\n      this.bounds.origin.y,\n      this.bounds.extents.x,\n      this.bounds.extents.y);\n    this.ctx.globalAlpha = initialAlpha\n  }\n}\n","import Particle from '../state/Particle'\nimport Renderer, { RendererFactory } from './Renderer'\nimport Rectangle from '../state/Rectangle';\nimport Vector2d from '../state/Vector2d';\n\nexport class FixedCircleRendererFactory implements RendererFactory {\n  constructor(readonly point: Vector2d, readonly radius: number) { }\n  createInstance(bounds: Rectangle, ctx: CanvasRenderingContext2D): Renderer {\n    return new FixedCircleRenderer(ctx, this.point, this.radius, bounds)\n  }\n}\n\nexport default class FixedCircleRenderer implements Renderer {\n  point: Vector2d;\n  gradient: CanvasGradient;\n  constructor(\n    readonly ctx: CanvasRenderingContext2D,\n    point: Vector2d,\n    readonly radius: number,\n    readonly bounds: Rectangle) {\n\n      let scaledPoint = new Vector2d(\n        bounds.extents.x * point.x,\n        bounds.extents.y * point.y)\n      this.point = bounds.origin.add(scaledPoint)\n      this.gradient = ctx.createRadialGradient(\n        this.point.x,\n        this.point.y,\n        0,//this.radius / 2,\n        this.point.x,\n        this.point.y,\n        this.radius);\n      this.gradient.addColorStop(0, 'black')\n      this.gradient.addColorStop(0.25, 'rgb(200,200,200)')\n      this.gradient.addColorStop(1, 'transparent')//grd.addColorStop(1,'transparent');\n  }\n\n  initialize() { }\n\n  render(_: Particle[]) {\n    this.ctx.beginPath()\n    this.ctx.arc(this.point.x, this.point.y, this.radius, 0, 2*Math.PI)\n    this.ctx.fillStyle = this.gradient\n    this.ctx.fill()\n  }\n}\n","import Particle from '../state/Particle'\nimport Vector2d from '../state/Vector2d'\nimport Renderer, { RendererFactory } from './Renderer'\nimport Rectangle from '../state/Rectangle';\n\nexport class ParticleRendererFactory implements RendererFactory {\n  createInstance(_: Rectangle, ctx: CanvasRenderingContext2D): Renderer {\n    return new ParticleRenderer(ctx)\n  }\n}\n\nexport default class ParticleRenderer implements Renderer {\n\n  private readonly circleCanvasCache: Map<string, OffscreenCanvas>\n\n  constructor(readonly ctx: CanvasRenderingContext2D) {\n    this.circleCanvasCache = new Map()\n  }\n\n  initialize() { }\n\n  render(particles: Particle[]) {\n    for (let particle of particles) {\n      this.ctx.strokeStyle = particle.hslColorString();\n      this.ctx.lineWidth = particle.rad * 2\n      this.ctx.beginPath();\n      if (particle.spd.x != 0 || particle.spd.y != 0) {\n        this.drawPathLine(particle)\n      }\n      this.ctx.stroke();\n      if (particle.rad > 1.5) {\n        let circleCanvas: OffscreenCanvas = this.getOrCreateCircleCanvas(particle)\n        let radPlus1 = particle.rad+1\n        this.ctx.drawImage(circleCanvas, particle.pos.x-radPlus1, particle.pos.y-radPlus1)\n        if (particle.spd.lengthSquared() > 1) {\n          this.ctx.drawImage(circleCanvas, particle.lastPos.x-radPlus1, particle.lastPos.y-radPlus1)\n        }\n      }\n      particle.lastPos.setEqualTo(particle.pos)\n    }\n  }\n\n  getOrCreateCircleCanvas(particle: Particle): OffscreenCanvas {\n    if (!this.circleCanvasCache.has(particle.colorSizeCacheKey())) {\n      let canvas = this.initializeCircleCanvas(particle)\n      this.circleCanvasCache.set(particle.colorSizeCacheKey(), canvas)\n    }\n    return this.circleCanvasCache.get(particle.colorSizeCacheKey())!\n  }\n\n  initializeCircleCanvas(particle: Particle): OffscreenCanvas {\n    let canvas = new OffscreenCanvas(particle.rad*2+2, particle.rad*2+2)\n    let ctx = <OffscreenCanvasRenderingContext2D>canvas.getContext(\"2d\")\n    ctx.beginPath();\n    ctx.arc(particle.rad+1, particle.rad+1, particle.rad, 0, Math.PI * 2)\n    ctx.fillStyle = particle.hslColorString()\n    ctx.fill()\n    return canvas\n  }\n\n  private drawPathLine(particle: Particle): void {\n    this.ctx.moveTo(particle.pos.x, particle.pos.y)\n    let spdVect = particle.spd;\n    let lengthSquared = spdVect.lengthSquared()\n    if (particle.rad < 1.5 && lengthSquared < 6) {\n      let shortage = 6 / lengthSquared\n      spdVect = spdVect.multiply(Math.sqrt(shortage))\n    }\n    let lastPos: Vector2d = particle.pos.subtract(spdVect)\n    this.ctx.lineTo(lastPos.x, lastPos.y)\n  }\n}\n","import Particle from '../state/Particle'\nimport Renderer, { RendererFactory } from './Renderer'\nimport QuadTreeBuilder  from '../datastructure/QuadTreeBuilder'\nimport { QuadTreeNode, QuadTreeInnerNode, QuadTreeLeafNode } from '../datastructure/QuadTreeNode'\nimport QuadTreeVisitor from '../datastructure/QuadTreeVisitor'\nimport ParticleCollection, { ParticleCollectionFactory } from '../state/ParticleCollection'\nimport Rectangle from '../state/Rectangle'\n\nexport class QuadTreeRendererFactory implements RendererFactory {\n  constructor(private readonly opacity: number) { }\n  createInstance(bounds: Rectangle, ctx: CanvasRenderingContext2D): Renderer {\n    return new QuadTreeRenderer(bounds, ctx, this.opacity)\n  }\n}\n\nexport default class QuadTreeRenderer implements Renderer {\n\n  private quadTree: QuadTreeNode<Particle, ParticleCollection>\n\n  constructor(\n    readonly bounds: Rectangle,\n    readonly ctx: CanvasRenderingContext2D,\n    readonly opacity: number)  {\n    // TODO: don't create the quadtree at all here. We should reuse a single quadTree\n    // throughout\n    let minNodeSize = bounds.extents.length() / 80\n    let quadTreeBuilder = new QuadTreeBuilder<Particle, ParticleCollection>(\n      new ParticleCollectionFactory(), minNodeSize)\n    this.quadTree = quadTreeBuilder.build(bounds)\n  }\n\n  initialize() { }\n\n  render(particles: Particle[]) {\n\n    this.quadTree.clear()\n\n    for (let particle of particles) {\n      this.quadTree.add(particle)\n    }\n\n    let initialAlpha = this.ctx.globalAlpha;\n    this.ctx.lineWidth = 0.5\n    this.ctx.globalAlpha = this.opacity\n    this.ctx.strokeStyle = \"rgb(100,100,100)\";\n    this.ctx.beginPath();\n\n    let renderingVisitor = new RenderingVisitor(this.ctx)\n\n    this.quadTree.accept(renderingVisitor)\n\n    this.ctx.stroke();\n    this.ctx.globalAlpha = initialAlpha\n  }\n}\n\nclass RenderingVisitor implements QuadTreeVisitor<Particle, ParticleCollection> {\n\n  constructor(readonly ctx: CanvasRenderingContext2D) {}\n\n  visit(node: QuadTreeInnerNode<Particle, ParticleCollection>): void {\n    if (!node.isEmpty) {\n      this.drawRect(node.bounds)\n      for (let child of node.children) {\n        child.accept(this)\n      }\n    }\n  }\n\n  visitLeaf(node: QuadTreeLeafNode<Particle, ParticleCollection>): void {\n    if (!node.isEmpty) {\n      this.drawRect(node.bounds)\n    }\n  }\n\n  private drawRect(rectangle: Rectangle): void {\n    this.ctx.rect(rectangle.origin.x, rectangle.origin.y, rectangle.extents.x, rectangle.extents.y);\n  }\n}\n","import Particle from '../state/Particle'\nimport Renderer from './Renderer'\n\nexport default class RendererCollection implements Renderer {\n\n  constructor(private readonly renderers: Renderer[]) { }\n\n  initialize(): void {\n    for (let renderer of this.renderers) {\n      renderer.initialize()\n    }\n  }\n\n  render(particles: Particle[]): void {\n    for (let renderer of this.renderers) {\n      renderer.render(particles)\n    }\n  }\n}\n"],"sourceRoot":""}