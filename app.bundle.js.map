{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app/datastructure/QuadTreeBuilder.ts","webpack:///./app/datastructure/QuadTreeNode.ts","webpack:///./app/script.ts","webpack:///./app/state/Particle.ts","webpack:///./app/state/ParticleBuilder.ts","webpack:///./app/state/Vector2d.ts","webpack:///./app/state/Vector3d.ts","webpack:///./app/state/mutation/AdvancerCollection.ts","webpack:///./app/state/mutation/AdvancerCollectionBuilder.ts","webpack:///./app/state/mutation/BasicAdvancer.ts","webpack:///./app/state/mutation/QuadTreeGravityAdvancer.ts","webpack:///./app/state/mutation/WallBounceAdvancer.ts","webpack:///./app/visualization/CanvasRenderer.ts","webpack:///./app/visualization/QuadTreeRenderer.ts","webpack:///./app/visualization/RendererBuilder.ts"],"names":[],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/script.ts\");\n","import HasPosition2d from '../state/HasPosition2d'\nimport Vector2d from '../state/Vector2d'\nimport QuadTreeNode from './QuadTreeNode'\nimport Particle from '../state/Particle'\n\nexport interface Aggregate<TElement> { }\n\nexport class ParticleAggregate implements Aggregate<Particle> {\n  constructor(public centroid: Vector2d, public totalMass: number) { }\n}\n\nexport interface Aggregator<TElement, TAggregate extends Aggregate<TElement>> {\n  aggregate(elements: TElement[]): TAggregate\n  combine(aggregates: Aggregate<TElement>[]): TAggregate\n}\n\nexport class ParticleAggregator implements Aggregator<Particle, ParticleAggregate> {\n  aggregate(particles: Particle[]): ParticleAggregate {\n    let totalMass = 0\n    let sumX = 0\n    let sumY = 0\n    for (let particle of particles) {\n      totalMass += 1\n      sumX += particle.pos.x\n      sumY += particle.pos.y\n    }\n    let avgX = totalMass == 0 ? 0 : sumX / totalMass\n    let avgY = totalMass == 0 ? 0 : sumY / totalMass\n    return new ParticleAggregate(new Vector2d(avgX, avgY), totalMass)\n  }\n  combine(aggregates: ParticleAggregate[]): ParticleAggregate {\n    let totalMass = 0\n    let sumX = 0\n    let sumY = 0\n    for (let agg of aggregates) {\n      if (agg.totalMass == 0) continue;\n      totalMass += agg.totalMass\n      sumX += agg.centroid.x * agg.totalMass\n      sumY += agg.centroid.y * agg.totalMass\n    }\n    let avgX = sumX / totalMass\n    let avgY = sumY / totalMass\n    return new ParticleAggregate(new Vector2d(avgX, avgY), totalMass)\n  }\n}\n\nexport class QuadTree<\n  TElement extends HasPosition2d,\n  TAggregate extends Aggregate<TElement>,\n  TAggregator extends Aggregator<TElement, TAggregate>> {\n\n  constructor(public root: QuadTreeNode<TElement, TAggregate>, private aggregator: TAggregator) {}\n\n  add(element: TElement) {\n    this.addRecursive(element, this.root)\n  }\n\n  computeAggregates() {\n    this.computeAggregatesRecursive(this.root)\n  }\n\n  clear() {\n    this.clearRecursive(this.root)\n  }\n\n  private addRecursive(element: TElement, node: QuadTreeNode<TElement, TAggregate>) {\n    node.isEmpty = false\n    if (node.isLeaf) {\n      node.elements.push(element)\n    } else {\n      let children = [node.upperLeft!, node.upperRight!, node.lowerLeft!, node.lowerRight!]\n      for (let child of children) {\n        if (child.contains(element)) {\n          this.addRecursive(element, child);\n          break;\n        }\n      }\n    }\n  }\n\n  private computeAggregatesRecursive(node: QuadTreeNode<TElement, TAggregate>) {\n    if (node.isEmpty) {\n      node.aggregate = this.aggregator.aggregate(node.elements)\n      return\n    } else if (node.isLeaf) {\n      node.aggregate = this.aggregator.aggregate(node.elements)\n    } else {\n      let children = node.children()\n      for (let child of children) {\n        this.computeAggregatesRecursive(child)\n      }\n      let childAggregates: Aggregate<TElement>[] = children.map(c => c.aggregate!)\n      node.aggregate = this.aggregator.combine(childAggregates)\n    }\n  }\n\n  private clearRecursive(node: QuadTreeNode<TElement, TAggregate>) {\n    if (!node.isEmpty) {\n      node.isEmpty = true\n      if (!node.isLeaf) {\n        for (let child of node.children()) {\n          this.clearRecursive(child)\n        }\n      }\n      node.elements = []\n      node.aggregate = null;\n    }\n  }\n}\n\nexport default class QuadTreeBuilder<\n  TElement extends HasPosition2d,\n  TAggregate extends Aggregate<TElement>,\n  TAggregator extends Aggregator<TElement, TAggregate>> {\n\n  constructor(private aggregator: TAggregator, private minNodeSize: number) {}\n\n  build(extents: Vector2d): QuadTree<TElement, TAggregate, TAggregator> {\n    return new QuadTree(this.buildImpl(new Vector2d(0,0), extents), this.aggregator);\n  }\n\n  private buildImpl(origin: Vector2d, extents: Vector2d): QuadTreeNode<TElement, TAggregate> {\n    if (extents.length() >= this.minNodeSize) {\n      let halfExtent = extents.multiply(0.5)\n      let upperLeft = this.buildImpl(origin, halfExtent)\n      let upperRight = this.buildImpl(origin.addX(halfExtent.x), halfExtent)\n      let lowerLeft = this.buildImpl(origin.addY(halfExtent.y), halfExtent)\n      let lowerRight = this.buildImpl(origin.add(halfExtent), halfExtent)\n      return new QuadTreeNode<TElement, TAggregate>(\n        origin, extents, upperLeft, upperRight, lowerLeft, lowerRight)\n    } else {\n      return new QuadTreeNode<TElement, TAggregate>(origin, extents)\n    }\n  }\n}\n","import HasPosition2d from '../state/HasPosition2d'\nimport { Aggregate } from './QuadTreeBuilder'\nimport Vector2d from '../state/Vector2d'\n\nexport default class QuadTreeNode<\n  TElement extends HasPosition2d,\n  TAggregate extends Aggregate<TElement>> {\n\n  public elements: TElement[] = []\n  public isLeaf: boolean;\n  public aggregate: TAggregate | null = null\n  public isEmpty: boolean = true\n  public em: number\n\n  constructor(\n    public origin: Vector2d,\n    public extents: Vector2d,\n    public upperLeft: QuadTreeNode<TElement, TAggregate> | null = null,\n    public upperRight: QuadTreeNode<TElement, TAggregate> | null = null,\n    public lowerLeft: QuadTreeNode<TElement, TAggregate> | null = null,\n    public lowerRight: QuadTreeNode<TElement, TAggregate> | null = null) {\n      this.isLeaf = upperLeft == null && upperRight == null && lowerLeft == null && lowerRight == null\n      this.em = extents.length() / 5\n    }\n\n  children(): QuadTreeNode<TElement, TAggregate>[] {\n    if (this.isLeaf) return []\n    else return [this.upperLeft!, this.upperRight!, this.lowerLeft!, this.lowerRight!]\n  }\n\n  contains(element: HasPosition2d): boolean {\n    let position = element.position()\n    return position.x >= this.origin.x &&\n      position.x < this.origin.x + this.extents.x &&\n      position.y >= this.origin.y &&\n      position.y < this.origin.y + this.extents.y;\n  }\n\n  containsMore(element: HasPosition2d): boolean {\n    let position = element.position()\n    let num = this.em\n    return position.x >= this.origin.x - num &&\n      position.x < this.origin.x + this.extents.x + num &&\n      position.y >= this.origin.y - num &&\n      position.y < this.origin.y + this.extents.y + num;\n  }\n}\n","import Particle from \"./state/Particle\";\nimport ParticleBuilder from \"./state/ParticleBuilder\"\nimport Advancer from \"./state/mutation/Advancer\"\nimport AdvancerBuilder from \"./state/mutation/AdvancerCollectionBuilder\"\nimport Renderer from \"./visualization/Renderer\"\nimport RendererBuilder from \"./visualization/RendererBuilder\"\n\nvar c = <HTMLCanvasElement>document.getElementById(\"canvas\");\nc.width  = window.innerWidth;\nc.height = window.innerHeight;\n\nfunction fullscreen(){\n  var el = <any>document.getElementById('canvas');\n  if(el.webkitRequestFullScreen) {\n    el.webkitRequestFullScreen();\n  }\n  else {\n    el.mozRequestFullScreen();\n  }\n}\nc.addEventListener(\"click\",fullscreen)\n\nlet ctx: CanvasRenderingContext2D = <CanvasRenderingContext2D>c.getContext(\"2d\")//ctx_temp!;\n\nlet particles: Particle[] = []\n\nlet particleBuilder = new ParticleBuilder(c.width, c.height);\n\nfor (var i = 0; i < 5000; i++) {\n  let particle: Particle = particleBuilder.generateRandomParticle(0.5, 1, 1);\n  particles.push(particle);\n}\n\nlet renderer: Renderer = RendererBuilder.createDefault(ctx, c.width, c.height, 0.8);\n\nrenderer.initialize();\n\nlet advancer: Advancer = AdvancerBuilder.createDefault(c.width, c.height);\n\nfunction frame() {\n  advancer.advance(particles);\n  renderer.render(particles);\n  requestAnimationFrame(frame);\n}\n\nrequestAnimationFrame(frame);\n","import HasPosition2d from './HasPosition2d'\nimport Vector2d from './Vector2d';\nimport Vector3d from './Vector3d'\n\nexport default class Particle implements HasPosition2d {\n  constructor(\n    readonly pos: Vector2d,\n    readonly spd: Vector2d,\n    readonly rad: number,\n    readonly color: Vector3d) { }\n\n  position(): Vector2d {\n    return this.pos;\n  }\n\n  private hslColorString_memo: string | null = null\n  hslColorString(): string {\n    if (this.hslColorString_memo == null) {\n      this.hslColorString_memo = `hsl(${this.color.x | 0},${this.color.y | 0}%,${this.color.z | 0}%)`\n    }\n    return this.hslColorString_memo!\n  }\n}\n","import Vector2d from './Vector2d'\nimport Vector3d from './Vector3d'\nimport Particle from './Particle'\n\nexport default class ParticleBuilder {\n\n  constructor(\n    readonly width: number,\n    readonly height: number) { }\n\n  generateRandomParticle(maxSpeed: number, minRadius: number, maxRadius: number) {\n    let radius = Math.floor(Math.random() * (maxRadius - minRadius)) + minRadius;\n    let randomPosition = new Vector2d(\n      Math.floor(Math.random() * this.width - radius) + radius,\n      Math.floor(Math.random() * this.height - radius) + radius,\n    );\n    let randomSpeed = new Vector2d(\n      Math.random() * maxSpeed * 2 - maxSpeed,\n      Math.random() * maxSpeed * 2 - maxSpeed,\n    );\n    return new Particle(\n      randomPosition, randomSpeed, radius, this.getRndColor()\n    );\n  }\n\n  private getRndColor() {\n\n    let hue = (360 * Math.random() | 0)\n\n    return new Vector3d(hue, 100, 50);\n  }\n}\n","export default class Vector2d {\n  constructor(\n    public x: number,\n    public y: number) { }\n\n    equals(other: Vector2d): boolean {\n      return this.x == other.x && this.y == other.y;\n    }\n\n    addX(x: number): Vector2d {\n      return new Vector2d(this.x+x, this.y);\n    }\n\n    addY(y: number): Vector2d {\n      return new Vector2d(this.x, this.y+y);\n    }\n\n    add(other: Vector2d): Vector2d {\n      return new Vector2d(this.x+other.x, this.y+other.y);\n    }\n\n    addMutate(other: Vector2d): void {\n      this.x += other.x;\n      this.y += other.y;\n    }\n\n    subtract(other: Vector2d): Vector2d {\n      return new Vector2d(this.x-other.x, this.y-other.y);\n    }\n\n    subtractMutate(other: Vector2d): void {\n      this.x -= other.x;\n      this.y -= other.y;\n    }\n\n    multiply(scalar: number): Vector2d {\n      return new Vector2d(this.x * scalar, this.y * scalar);\n    }\n\n    lengthSquared(): number {\n      return this.x * this.x + this.y * this.y\n    }\n\n    length(): number {\n      return Math.sqrt(this.lengthSquared())\n    }\n\n    toString(): string {\n      return `Vector2d: {x: ${this.x}, y: ${this.y}}`\n    }\n}\n","export default class Vector3d {\n  constructor(\n    public x: number,\n    public y: number,\n    public z: number) { }\n\n    length(): number {\n      return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)\n    }\n\n    multiply(scalar: number): Vector3d {\n      return new Vector3d(this.x * scalar, this.y * scalar, this.z * scalar);\n    }\n}\n","import Advancer from \"./Advancer\"\nimport Particle from '../Particle'\n\nexport default class AdvancerBuilder implements Advancer {\n\n  constructor(private advancers: Advancer[]) {}\n\n  advance(particles: Particle[]): void {\n    this.advancers.forEach(advancer => advancer.advance(particles))\n  }\n}\n","import Advancer from \"./Advancer\"\nimport BasicAdvancer from './BasicAdvancer'\nimport WallBounceAdvancer from './WallBounceAdvancer'\nimport GravityAdvancer from './GravityAdvancer'\nimport Vector2d from '../Vector2d'\nimport QuadTreeGravityAdvancer from './QuadTreeGravityAdvancer'\nimport AdvancerCollection from './AdvancerCollection'\n\nexport default class AdvancerCollectionBuilder {\n\n  static createDefault(width: number, height: number): Advancer {\n\n    let advancers: Advancer[] = [\n      new WallBounceAdvancer(0.5, width, height),\n      new QuadTreeGravityAdvancer(0.05, new Vector2d(width, height)),\n      //new GravityAdvancer(0.05),\n      new BasicAdvancer()\n    ];\n\n    return new AdvancerCollection(advancers)\n  }\n}\n","import Advancer from './Advancer'\nimport Particle from '../Particle'\n\nexport default class BasicAdvancer implements Advancer {\n  advance(particles: Particle[]): void {\n    for (let particle of particles ) {\n      particle.pos.addMutate(particle.spd);\n    }\n  }\n}\n","import Advancer from './Advancer'\nimport Particle from '../Particle'\nimport QuadTreeNode from '../../datastructure/QuadTreeNode'\nimport QuadTreeBuilder from '../../datastructure/QuadTreeBuilder'\nimport { QuadTree, ParticleAggregate, ParticleAggregator } from '../../datastructure/QuadTreeBuilder'\n\nimport Vector2d from '../Vector2d'\n\nexport default class QuadTreeGravityAdvancer implements Advancer {\n\n  private quadTree: QuadTree<Particle, ParticleAggregate, ParticleAggregator>\n\n  constructor(readonly gravityCoef: number, readonly extents: Vector2d) {\n    let aggregator = new ParticleAggregator()\n    // divide the screen up into a roughly 20x20 grid at the leaf level.\n    // TODO: move this into a builder and/or constants file.\n    let minNodeSize = extents.length() / 20\n    let quadTreeBuilder = new QuadTreeBuilder<Particle, ParticleAggregate, ParticleAggregator>(\n      aggregator, minNodeSize)\n    this.quadTree = quadTreeBuilder.build(extents)\n  }\n\n  advance(particles: Particle[]): void {\n\n    this.quadTree.clear()\n\n    for (let particle of particles) {\n      this.quadTree.add(particle)\n    }\n\n    this.quadTree.computeAggregates()\n\n    for (let particle of particles) {\n      this.applyGravityRecursive(particle, this.quadTree.root)\n    }\n  }\n\n  private applyGravityRecursive(particle: Particle, node: QuadTreeNode<Particle, ParticleAggregate>) {\n    if (node.isEmpty) return\n    let contained = node.containsMore(particle)\n    if (contained && node.isLeaf) {\n      for (let other of node.elements) {\n        if (other == particle) continue\n        let diff = particle.pos.subtract(other.pos);\n        let gravityStrength = 1.0/(diff.lengthSquared()) * this.gravityCoef;\n        let gravityVector = diff.multiply(gravityStrength);\n        particle.spd.subtractMutate(gravityVector)\n      }\n    } else if (contained) {\n      for (let child of node.children()) {\n        this.applyGravityRecursive(particle, child)\n      }\n    } else {\n      // node does not contain child - recurse no further\n      let totalMass = node.aggregate!.totalMass;\n      let aggLength = node.aggregate!.centroid.length();\n      if (totalMass == 0) return\n      //if (aggLength == 0) return\n      if (!isFinite(totalMass)) return\n      if (!isFinite(aggLength)) return\n      let diff = particle.pos.subtract(node.aggregate!.centroid)\n      let gravityStrength = node.aggregate!.totalMass * 1.0/(diff.lengthSquared()) * this.gravityCoef;\n      let gravityVector = diff.multiply(gravityStrength);\n      particle.spd.subtractMutate(gravityVector)\n    }\n  }\n}\n","import Advancer from './Advancer'\nimport Particle from '../Particle'\n\nexport default class WallBounceAdvancer implements Advancer {\n\n  constructor(readonly bounceCoef: number, readonly width: number, readonly height: number) { }\n\n  advance(particles: Particle[]): void {\n    for (let particle of particles) {\n      if (this.belowMinX(particle) || this.aboveMaxX(particle)) {\n        this.invertSpdX(particle)\n      }\n\n      if (this.aboveMaxY(particle) || this.belowMinY(particle)) {\n        this.invertSpdY(particle)\n      }\n    }\n  }\n\n  private invertSpdX(particle: Particle): void {\n    particle.spd.x *= -this.bounceCoef\n  }\n\n  private invertSpdY(particle: Particle): void {\n    particle.spd.y *= -this.bounceCoef\n  }\n\n  private aboveMaxX(particle: Particle): boolean {\n    return (particle.pos.x > this.width - particle.rad && particle.spd.x > 0)\n  }\n\n  private belowMinX(particle: Particle): boolean {\n    return (particle.pos.x < particle.rad && particle.spd.x < 0);\n  }\n\n  private aboveMaxY(particle: Particle): boolean {\n    return (particle.pos.y > this.height - particle.rad && particle.spd.y > 0)\n  }\n\n  private belowMinY(particle: Particle): boolean {\n    return (particle.pos.y < particle.rad && particle.spd.y < 0)\n  }\n}\n","import Particle from '../state/Particle'\nimport Vector2d from '../state/Vector2d'\nimport Renderer from './Renderer'\n\nexport default class CanvasRenderer implements Renderer {\n  constructor(\n    readonly ctx: CanvasRenderingContext2D,\n    readonly width: number,\n    readonly height: number,\n    readonly fadeRate: number) { }\n\n  initialize() {\n    this.ctx.globalAlpha = 1;\n    this.ctx.fillStyle = \"rgb(3,3,3)\";\n    this.ctx.fillRect(0,0,this.width,this.height);\n  }\n\n  render(particles: Particle[]) {\n    this.fade()\n    for (let particle of particles) {\n      this.ctx.strokeStyle = particle.hslColorString();\n      this.ctx.lineWidth = particle.rad * 2\n      this.ctx.beginPath();\n      if (particle.spd.x != 0 || particle.spd.y != 0) {\n        this.drawPathLine(particle)\n      }\n      this.ctx.stroke();\n    }\n  }\n\n  private drawPathLine(particle: Particle): void {\n    this.ctx.moveTo(particle.pos.x, particle.pos.y)\n    let spdVect = particle.spd;\n    let lastPos: Vector2d = particle.pos.subtract(spdVect)\n    while (spdVect.lengthSquared() < 4) {\n      spdVect = spdVect.multiply(2)\n      lastPos = particle.pos.subtract(spdVect)\n    }\n    this.ctx.lineTo(lastPos.x, lastPos.y)\n  }\n\n  private fade(): void {\n    let initialAlpha = this.ctx.globalAlpha;\n    this.ctx.globalAlpha = this.fadeRate\n    this.ctx.fillStyle = \"black\"\n    this.ctx.fillRect(0,0,this.width,this.height)\n    this.ctx.globalAlpha = initialAlpha\n  }\n}\n","import Particle from '../state/Particle'\nimport Vector2d from '../state/Vector2d'\nimport Renderer from './Renderer'\nimport QuadTreeNode from '../datastructure/QuadTreeNode'\nimport { QuadTree, Aggregate, Aggregator } from '../datastructure/QuadTreeBuilder'\nimport QuadTreeBuilder  from '../datastructure/QuadTreeBuilder'\n\nclass NullAggregate implements Aggregate<Particle> {\n  static instance = new NullAggregate()\n}\nclass NullAggregator implements Aggregator<Particle, NullAggregate> {\n  aggregate(elements: Particle[]): NullAggregate { return NullAggregate.instance }\n  combine(aggregates: Aggregate<Particle>[]): NullAggregate { return NullAggregate.instance }\n}\n\nexport default class QuadTreeRenderer implements Renderer {\n\n  private quadTree: QuadTree<Particle, NullAggregate, NullAggregator>\n\n  constructor(\n    readonly ctx: CanvasRenderingContext2D,\n    readonly extents: Vector2d)  {\n    // TODO: don't create the quadtree at all here. We should reuse a single quadTree\n    // throughout\n    let minNodeSize = extents.length() / 40\n    let quadTreeBuilder = new QuadTreeBuilder<Particle, NullAggregate, NullAggregator>(\n      new NullAggregator(), minNodeSize)\n    this.quadTree = quadTreeBuilder.build(extents)\n  }\n\n\n  initialize() { }\n\n  render(particles: Particle[]) {\n\n    this.quadTree.clear()\n\n    for (let particle of particles) {\n      this.quadTree.add(particle)\n    }\n\n    this.ctx.lineWidth = 0.5\n    this.ctx.strokeStyle = \"rgb(30,30,30)\";\n    this.ctx.beginPath();\n    this.renderRecursive(this.quadTree.root)\n    this.ctx.stroke();\n  }\n\n  private renderRecursive(node: QuadTreeNode<Particle, NullAggregate>) {\n    this.ctx.rect(node.origin.x, node.origin.y, node.extents.x, node.extents.y);\n    if (!node.isEmpty) {\n      for (let child of node.children()) {\n        this.renderRecursive(child)\n      }\n    }\n  }\n}\n","import CanvasRenderer from './CanvasRenderer'\nimport QuadTreeRenderer from './QuadTreeRenderer'\nimport Renderer from './Renderer'\nimport Particle from '../state/Particle'\nimport Vector2d from '../state/Vector2d'\n\nexport default class RendererBuilder {\n\n  static createDefault(\n    ctx: CanvasRenderingContext2D,\n    width: number,\n    height: number,\n    fadeRate: number): Renderer {\n\n    let canvasRenderer = new CanvasRenderer(ctx, width, height, fadeRate)\n    let quadTreeRenderer = new QuadTreeRenderer(ctx, new Vector2d(width, height))\n    let renderer: Renderer = {\n      initialize() {\n        canvasRenderer.initialize()\n        quadTreeRenderer.initialize()\n      },\n      render(elements: Particle[]) {\n        canvasRenderer.render(elements)\n        quadTreeRenderer.render(elements)\n\n      }\n    }\n    return renderer\n  }\n}\n"],"sourceRoot":""}